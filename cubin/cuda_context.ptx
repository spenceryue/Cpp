//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21373419
// Cuda compilation tools, release 8.0, V8.0.55
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_61
.address_size 64

	// .globl	kernel
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[33] = {72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 32, 102, 114, 111, 109, 32, 71, 80, 85, 32, 116, 104, 114, 101, 97, 100, 32, 37, 100, 33, 10, 0};

.visible .entry kernel(

)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<6>;


	mov.u64 	%rd5, __local_depot0;
	cvta.local.u64 	%SP, %rd5;
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd1;
	mov.u32 	%r1, %tid.x;
	st.local.u32 	[%rd2], %r1;
	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 0
	ret;
}

	// .globl	saxpy
.visible .entry saxpy(
	.param .f32 saxpy_param_0,
	.param .u64 saxpy_param_1,
	.param .u64 saxpy_param_2,
	.param .u64 saxpy_param_3,
	.param .u32 saxpy_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.f32 	%f1, [saxpy_param_0];
	ld.param.u64 	%rd1, [saxpy_param_1];
	ld.param.u64 	%rd2, [saxpy_param_2];
	ld.param.u64 	%rd3, [saxpy_param_3];
	ld.param.u32 	%r2, [saxpy_param_4];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB1_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f2, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f3, [%rd8];
	fma.rn.f32 	%f4, %f2, %f1, %f3;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f4;

BB1_2:
	ret;
}


